main :

while 1
	capture all signal
	reset fds
	readline (PS1)
	analyse the line we found
	call apropriate function depending on parsing



line analyse : 
if line len = 0, return
add line to history

lexer (improved split), return linked_list
parse line



parsing : 
	search for pipe in whole cmd
		if found, send whole cmd to pipe funct
		else, send whole cmd to parse_chevrons.
	
pipe function :
	count pipe, deduce nb cmd to execute (nb_pipe + 1)
	malloc *int to store each pid;
	maloc *int[2] to store each pipe;

	for each cmd :
		extract sub_cmd (without the pipe);
		create fork, store pid
			child :
				close unused pipe
				do dup2
				send cmd to parse_chevron
				close remaining pipe.
		fully close previous pipe (pipe 1 after cmd2...)

		get to next sub_cmd

	for each pid, starting from the last :
		waitpid;
